{
  "name": "Jira-issue-card-printer",
  "tagline": "Beautiful Jira Issue Card Printer",
  "body": "(function() {\r\n  // Public Instances\r\n  // Jira: https://connect.atlassian.net/browse/NERDS-33286\r\n  // PivotTracker: https://www.pivotaltracker.com/n/projects/510733\r\n  // Trello: https://trello.com/b/8zlPSh70/spike\r\n  // YouTrack: http://chiuky.myjetbrains.com/youtrack/dashboard\r\n  \r\n  if (!String.prototype.startsWith) {\r\n    String.prototype.startsWith = function(searchString, position) {\r\n      position = position || 0;\r\n      return this.indexOf(searchString, position) === position;\r\n    };\r\n  }\r\n\r\n  var global = {};\r\n  global.version = \"4.6.2\";\r\n  global.issueTrackingUrl = \"github.com/chiuky/Jira-Issue-Card-Printer\";\r\n\r\n  global.isDev = document.currentScript == null;\r\n\r\n  var $ = jQuery;\r\n\r\n  // enforce jQuery\r\n  if (typeof jQuery == 'undefined') {\r\n    alert(\"jQuery is required!\\n\\nPlease create an issue at\\n\" + global.issueTrackingUrl);\r\n    return;\r\n  }\r\n  \r\n\r\n  // run\r\n  try {\r\n    init().then(main).catch(handleError);\r\n  } catch (e) {\r\n    handleError(e);\r\n  }\r\n\r\n  function main() {\r\n    var promises = [];\r\n\r\n    ga('send', 'pageview');\r\n\r\n    //preconditions\r\n    if ($(\"#card-printer-iframe\").length > 0) {\r\n      closePrintPreview();\r\n    }\r\n\r\n    console.log(\"Run...\")\r\n    for (issueTracker of getIssueTrackers()) {\r\n      if(issueTracker.isEligible()){\r\n        console.log(\"Issue Tracker: \" + issueTracker.name);\r\n        global.appFunctions = issueTracker;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(!global.appFunctions){\r\n      alert(\"Unsupported app. Please create an issue at \" + global.issueTrackingUrl);\r\n      return;\r\n    }\r\n\r\n    // add overlay frame\r\n    var appFrame = createOverlayFrame();\r\n    $(\"body\").append(appFrame);\r\n\r\n\r\n    // add convinient fields\r\n    appFrame.window = appFrame.contentWindow;\r\n    appFrame.document = appFrame.window.document;\r\n    appFrame.document.open();\r\n    appFrame.document.close();\r\n    global.appFrame = appFrame;\r\n\r\n    // add print dialog content\r\n    $(\"head\", global.appFrame.document).prepend(printPreviewElementStyle());\r\n    $(\"body\", global.appFrame.document).append(printPreviewElement());\r\n    updatePrintDialoge();\r\n\r\n    // get print content frame\r\n    var printFrame = $(\"#card-print-dialog-content-iframe\", global.appFrame.document)[0];\r\n    // add convinient fields\r\n    printFrame.window = printFrame.contentWindow;\r\n    printFrame.document = printFrame.window.document;\r\n    printFrame.document.open();\r\n    printFrame.document.close();\r\n    global.printFrame = printFrame;\r\n\r\n    // add listeners to redraw crads on print event\r\n    printFrame.window.addEventListener(\"resize\", redrawCards);\r\n    printFrame.window.matchMedia(\"print\").addListener(redrawCards);\r\n\r\n    // collect selcted issues\r\n    var issueKeyList = global.appFunctions.getSelectedIssueKeyList();\r\n    if (issueKeyList.length <= 0) {\r\n      alert(\"Please select at least one issue.\");\r\n      return;\r\n    } else if (issueKeyList.length > 30) {\r\n      var confirmResult = confirm(\"Are you sure you want select \" + issueKeyList.length + \" issues?\");\r\n      if (!confirmResult) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // render cards\r\n    promises.push(renderCards(issueKeyList));\r\n\r\n    $(\"#card-print-dialog-title\", global.appFrame.document).text(\"Card Printer \" + global.version + \" - Loading issues...\");\r\n    return Promise.all(promises).then(function() {\r\n      $(\"#card-print-dialog-title\", global.appFrame.document).text(\"Card Printer \" + global.version);\r\n    });\r\n  }\r\n\r\n  function init() {\r\n    var promises = [];\r\n\r\n    console.log(\"Init...\")\r\n    initGoogleAnalytics();\r\n\r\n    addStringFunctions();\r\n    loadSettings();\r\n\r\n    global.hostOrigin = \"https://chiuky.github.io/Jira-Issue-Card-Printer/\";\r\n    if (global.isDev) {\r\n      console.log(\"DEVELOPMENT\");\r\n      global.hostOrigin = \"https://rawgit.com/chiuky/Jira-Issue-Card-Printer/develop/\";\r\n    }\r\n    global.resourceOrigin = global.hostOrigin + \"resources/\";\r\n\r\n    var resources = getResources();\r\n\r\n    global.cardHtml = resources.cardHtml;\r\n    global.cardCss = resources.cardCss.replace(/https:\\/\\/chiuky.github.io\\/Jira-Issue-Card-Printer\\/resources/g, global.resourceOrigin);\r\n    global.printPreviewHtml = resources.printPreviewHtml;\r\n    global.printPreviewCss = resources.printPreviewCss.replace(/https:\\/\\/chiuky.github.io\\/Jira-Issue-Card-Printer\\/resources/g, global.resourceOrigin);\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  function error2object(value) {\r\n      if (value instanceof Error) {\r\n          var error = {};\r\n          Object.getOwnPropertyNames(value).forEach(function (key) {\r\n              error[key] = value[key];\r\n          });\r\n          return error;\r\n      }\r\n      return value;\r\n  }\r\n\r\n  function handleError(error){\r\n    error = error2object(error);\r\n    var error = JSON.stringify(error,2,2);\r\n    console.log(\"ERROR \" + error);\r\n    ga('send', 'exception', { 'exDescription': error, 'exFatal': true });\r\n    alert(\"Sorry something went wrong\\n\\nPlease create an issue with following details at\\n\" + global.issueTrackingUrl + \"\\n\\n\" + error);\r\n  }\r\n\r\n  function saveSettings(){\r\n    var settings = global.settings;\r\n    writeCookie(\"card_printer_scale\", settings.scale);\r\n    writeCookie(\"card_printer_row_count\", settings.rowCount);\r\n    writeCookie(\"card_printer_column_count\", settings.colCount);\r\n\r\n    writeCookie(\"card_printer_single_card_page\", settings.singleCardPage);\r\n    writeCookie(\"card_printer_hide_description\", settings.hideDescription);\r\n    writeCookie(\"card_printer_hide_assignee\", settings.hideAssignee);\r\n    writeCookie(\"card_printer_hide_due_date\", settings.hideDueDate);\r\n    writeCookie(\"card_printer_hide_estimate\", settings.hideEstimate);\r\n    writeCookie(\"card_printer_hide_qr_code\", settings.hideQrCode);\r\n  }\r\n\r\n  function loadSettings(){\r\n    var settings = global.settings = global.settings || {};\r\n    settings.scale = parseFloat(readCookie(\"card_printer_scale\")) || 0.0;\r\n    settings.rowCount = parseInt(readCookie(\"card_printer_row_count\")) || 2;\r\n    settings.colCount = parseInt(readCookie(\"card_printer_column_count\")) || 1;\r\n\r\n    settings.singleCardPage = parseBool(readCookie(\"card_printer_single_card_page\"), true );\r\n    settings.hideDescription = parseBool(readCookie(\"card_printer_hide_description\"), false);\r\n    settings.hideAssignee = parseBool(readCookie(\"card_printer_hide_assignee\"), false);\r\n    settings.hideDueDate = parseBool(readCookie(\"card_printer_hide_due_date\"), false);\r\n    settings.hideEstimate = parseBool(readCookie(\"card_printer_hide_estimate\"), false);\r\n    settings.hideQrCode = parseBool(readCookie(\"card_printer_hide_qr_code\"), false);\r\n  }\r\n\r\n  function print() {\r\n    ga('send', 'event', 'button', 'click', 'print', $(\".card\", global.printFrame.contentWindow.document).length);\r\n    global.printFrame.contentWindow.print();\r\n  }\r\n\r\n  function createOverlayFrame(){\r\n    var appFrame = document.createElement('iframe');\r\n    appFrame.id = \"card-printer-iframe\";\r\n    $(appFrame).css({\r\n      'position': 'fixed',\r\n      'height': '100%',\r\n      'width': '100%',\r\n      'top': '0',\r\n      'left': '0',\r\n      'background': 'rgba(0, 0, 0, 0.0)',\r\n      'boxSizing': 'border-box',\r\n      'wordWrap': 'break-word',\r\n      'zIndex': '99999'\r\n    });\r\n    return appFrame;\r\n  }\r\n\r\n  function updatePrintDialoge(){\r\n    var appFrameDocument = global.appFrame.document;\r\n    var settings = global.settings;\r\n    $(\"#scaleRange\", appFrameDocument).val(settings.scale);\r\n    $(\"#scaleRange\", appFrameDocument).parent().find(\"output\").val(settings.scale);\r\n    $(\"#rowCount\", appFrameDocument).val(settings.rowCount);\r\n    $(\"#columnCount\", appFrameDocument).val(settings.colCount);\r\n\r\n    $(\"#single-card-page-checkbox\", appFrameDocument).attr('checked', settings.singleCardPage );\r\n    $(\"#description-checkbox\", appFrameDocument).attr('checked', !settings.hideDescription );\r\n    $(\"#assignee-checkbox\", appFrameDocument).attr('checked', !settings.hideAssignee );\r\n    $(\"#due-date-checkbox\", appFrameDocument).attr('checked', !settings.hideDueDate );\r\n    $(\"#estimate-checkbox\", appFrameDocument).attr('checked', !settings.hideEstimate );\r\n    $(\"#qr-code-checkbox\", appFrameDocument).attr('checked', !settings.hideQrCode );\r\n  }\r\n\r\n  function renderCards(issueKeyList) {\r\n    var promises = [];\r\n\r\n    var printFrameDocument = global.printFrame.document;\r\n\r\n    printFrameDocument.open();\r\n    printFrameDocument.write(\"<head/><body></body>\");\r\n    printFrameDocument.close();\r\n\r\n    $(\"head\", printFrameDocument).append(cardElementStyle());\r\n    $(\"body\", printFrameDocument).append(\"<div id='preload'/>\");\r\n    $(\"#preload\", printFrameDocument).append(\"<div class='zigzag'/>\");\r\n\r\n    console.log(\"load \" + issueKeyList.length + \" issues...\");\r\n\r\n    $.each(issueKeyList, function(index, issueKey) {\r\n      var card = cardElement(issueKey);\r\n      card.attr(\"index\", index);\r\n      card.find('.issue-id').text(issueKey);\r\n      $(\"body\", printFrameDocument).append(card);\r\n\r\n      promises.push(global.appFunctions.getCardData(issueKey).then(function(cardData) {\r\n        // console.log(\"cardData: \" + JSON.stringify(cardData,2,2));\r\n        ga('send', 'event', 'card', 'generate', cardData.type);\r\n        fillCard(card, cardData);\r\n        redrawCards();\r\n      }));\r\n    });\r\n\r\n    console.log(\"wait for issues loaded...\");\r\n    return Promise.all(promises).then(function() {\r\n      console.log(\"...all issues loaded.\");\r\n      redrawCards();\r\n    });\r\n  }\r\n\r\n  function redrawCards() {\r\n    styleCards();\r\n    scaleCards();\r\n    cropCards();\r\n    resizeIframe(global.printFrame);\r\n  }\r\n\r\n  function fillCard(card, data) {\r\n    //Key\r\n    card.find('.issue-id').text(data.key);\r\n\r\n    //Type\r\n    card.find(\".issue-icon\").attr(\"type\", data.type);\r\n\r\n    //Summary\r\n    card.find('.issue-summary').text(data.summary);\r\n\r\n    //Description\r\n    if (data.description) {\r\n      card.find('.issue-description').html(data.description);\r\n    } else {\r\n      card.find(\".issue-description\").addClass(\"hidden\");\r\n    }\r\n\r\n    //Assignee\r\n    if (data.assignee) {\r\n      if (data.avatarUrl) {\r\n        card.find(\".issue-assignee\").css(\"background-image\", \"url('\" + data.avatarUrl + \"')\");\r\n      } else {\r\n        card.find(\".issue-assignee\").text(data.assignee[0].toUpperCase());\r\n      }\r\n    } else {\r\n      card.find(\".issue-assignee\").remove();\r\n    }\r\n\r\n    //Due-Date\r\n    if (data.dueDate) {\r\n      card.find(\".issue-due-date\").text(data.dueDate);\r\n    } else {\r\n      card.find(\".issue-due-box\").remove();\r\n    }\r\n\r\n    //Attachment\r\n    if (data.hasAttachment) {} else {\r\n      card.find('.issue-attachment').remove();\r\n    }\r\n\r\n    //Estimate\r\n    if (data.estimate) {\r\n      card.find(\".issue-estimate\").text(data.estimate);\r\n    } else {\r\n      card.find(\".issue-estimate\").remove();\r\n    }\r\n\r\n    //Epic\r\n    if (data.superIssue) {\r\n      card.find(\".issue-epic-id\").text(data.superIssue.key);\r\n      card.find(\".issue-epic-name\").text(data.superIssue.summary);\r\n    } else {\r\n      card.find(\".issue-epic-box\").remove();\r\n    }\r\n\r\n    //QR-Code\r\n    var qrCodeUrl = 'https://chart.googleapis.com/chart?cht=qr&chs=256x256&chld=L|1&chl=' + encodeURIComponent(data.url);\r\n    card.find(\".issue-qr-code\").css(\"background-image\", \"url('\" + qrCodeUrl + \"')\");\r\n  }\r\n\r\n  function styleCards() {\r\n    var settings = global.settings;\r\n    var printFrame = global.printFrame\r\n\r\n    // hide/show description\r\n    $(\".issue-description\", printFrame.document).toggle(!settings.hideDescription);\r\n    // hide/show assignee\r\n    $(\".issue-assignee\", printFrame.document).toggle(!settings.hideAssignee);\r\n    // hide/show due date\r\n    $(\".issue-due-box\", printFrame.document).toggle(!settings.hideDueDate);\r\n    // hide/show estimate\r\n    $(\".issue-estimate\", printFrame.document).toggle(!settings.hideEstimate);\r\n    // hide/show cr code\r\n    $(\".issue-qr-code\", printFrame.document).toggle(!settings.hideQrCode);\r\n\r\n    // enable/disable single card page\r\n    $(\".card\", printFrame.document).css({ 'page-break-after' : '', 'float' : '', 'margin-bottom': '' });\r\n    if (settings.singleCardPage) {\r\n      $(\".card\", printFrame.document).css({ 'page-break-after': 'always', 'float': 'none', 'margin-bottom': '20px' });\r\n    } else {\r\n      $(\".card\", printFrame.document).each(function(index, element){\r\n        if(index % (settings.colCount * settings.rowCount ) >= (settings.colCount * (settings.rowCount - 1))){\r\n          $(element).css({ 'margin-bottom': '20px' });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function scaleCards() {\r\n    var settings = global.settings;\r\n    var printFrame = global.printFrame;\r\n\r\n    var scaleValue = settings.scale * 2.0;\r\n    var scaleRoot;\r\n    if(scaleValue < 0) {\r\n      scaleRoot = 1.0 / (1.0 - scaleValue);\r\n    } else {\r\n      scaleRoot = 1.0 * (1.0 + scaleValue);\r\n    }\r\n\r\n    var rowCount = settings.rowCount;\r\n    var columnCount = settings.colCount;\r\n\r\n    // scale\r\n\r\n    // reset scale\r\n    $(\"html\", printFrame.document).css(\"font-size\", scaleRoot + \"cm\");\r\n    $(\"#gridStyle\", printFrame.document).remove();\r\n\r\n    // calculate scale\r\n\r\n    var bodyElement = $(\"body\", printFrame.document);\r\n    var cardMaxWidth = Math.floor(bodyElement.outerWidth() / columnCount);\r\n    var cardMaxHeight = Math.floor(bodyElement.outerHeight() / rowCount);\r\n\r\n    var cardElement = $(\".card\", printFrame.document);\r\n    var cardMinWidth = cardElement.css(\"min-width\") ? cardElement.css(\"min-width\").replace(\"px\", \"\") : 0;\r\n    var cardMinHeight = cardElement.css(\"min-height\") ? cardElement.css(\"min-height\").replace(\"px\", \"\") : 0;\r\n\r\n    var scaleWidth = cardMaxWidth / cardMinWidth ;\r\n    var scaleHeight = cardMaxHeight / cardMinHeight ;\r\n    var scale = Math.min(scaleWidth, scaleHeight, 1);\r\n\r\n    // scale\r\n    $(\"html\", printFrame.document).css(\"font-size\", ( scaleRoot * scale ) + \"cm\");\r\n\r\n    // grid size\r\n    var style = document.createElement('style');\r\n    style.id = 'gridStyle';\r\n    style.type = 'text/css';\r\n    style.innerHTML = \".card { \"+\r\n    \"width: calc( 100% / \" + columnCount + \" );\" +\r\n    \"height: calc( 100% / \" + rowCount + \" );\"+\r\n    \"}\";\r\n    $(\"head\", printFrame.document).append(style);\r\n  }\r\n\r\n  function cropCards() {\r\n    var cardElements = Array.from(global.printFrame.document.querySelectorAll(\".card\"));\r\n    cardElements.forEach(function(cardElement) {\r\n      var cardContent = cardElement.querySelectorAll(\".card-body\")[0];\r\n      if (cardContent.scrollHeight > cardContent.offsetHeight) {\r\n        cardContent.classList.add(\"zigzag\");\r\n      } else {\r\n        cardContent.classList.remove(\"zigzag\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function closePrintPreview() {\r\n    $(\"#card-printer-iframe\").remove();\r\n  }\r\n\r\n  //############################################################################################################################\r\n  //############################################################################################################################\r\n  //############################################################################################################################\r\n\r\n  // http://www.cssdesk.com/T9hXg\r\n\r\n  function printPreviewElement() {\r\n    var result = $('<div/>').html(global.printPreviewHtml).contents();\r\n\r\n    // info\r\n    result.find(\"#report-issue\").click(function(event) {\r\n      window.open('https://github.com/chiuky/Jira-Issue-Card-Printer/issues');\r\n      return false;\r\n    });\r\n\r\n    result.find(\"#about\").click(function(event) {\r\n      window.open('http://chiuky.blogspot.de/2014/01/jira-issue-card-printer-bookmarklet.html');\r\n      return false;\r\n    });\r\n\r\n    // enable single card page\r\n\r\n    result.find(\"#single-card-page-checkbox\").click(function() {\r\n      global.settings.singleCardPage = this.checked;\r\n      saveSettings();\r\n      redrawCards();\r\n      return true;\r\n    });\r\n\r\n    // hide description\r\n\r\n    result.find(\"#description-checkbox\").click(function() {\r\n      global.settings.hideDescription = !this.checked;\r\n      saveSettings();\r\n      redrawCards();\r\n      return true;\r\n    });\r\n\r\n    // show assignee\r\n\r\n    result.find(\"#assignee-checkbox\").click(function() {\r\n      global.settings.hideAssignee = !this.checked;\r\n      saveSettings();\r\n      redrawCards();\r\n      return true;\r\n    });\r\n\r\n    // show due date\r\n\r\n    result.find(\"#due-date-checkbox\").click(function() {\r\n      global.settings.hideDueDate = !this.checked;\r\n      saveSettings();\r\n      redrawCards();\r\n      return true;\r\n    });\r\n\r\n    // show due date\r\n\r\n    result.find(\"#estimate-checkbox\").click(function() {\r\n      global.settings.hideEstimate = !this.checked;\r\n      saveSettings();\r\n      redrawCards();\r\n      return true;\r\n    });\r\n\r\n    // show QR Code\r\n\r\n    result.find(\"#qr-code-checkbox\").click(function() {\r\n      global.settings.hideQrCode = !this.checked;\r\n      saveSettings();\r\n      redrawCards();\r\n      return true;\r\n    });\r\n\r\n    // scale font\r\n\r\n    result.find(\"#scaleRange\").on(\"input\", function() {\r\n      global.settings.scale = $(this).val();\r\n      saveSettings();\r\n      redrawCards();\r\n    });\r\n\r\n    // grid\r\n\r\n    result.find(\"#rowCount\").on(\"input\", function() {\r\n      global.settings.rowCount = $(this).val();\r\n      saveSettings();\r\n      redrawCards();\r\n    });\r\n    result.find(\"#rowCount\").click(function() {\r\n      this.select();\r\n    });\r\n\r\n\r\n    result.find(\"#columnCount\").on(\"input\", function() {\r\n      global.settings.colCount = $(this).val();\r\n      saveSettings();\r\n      redrawCards();\r\n    });\r\n    result.find(\"#columnCount\").click(function() {\r\n      this.select();\r\n    });\r\n\r\n\r\n    // print\r\n\r\n    result.find(\"#card-print-dialog-print\")\r\n      .click(function(event) {\r\n        print();\r\n        return false;\r\n      });\r\n\r\n    // closePrintPreview\r\n\r\n    result.find(\"#card-print-dialog-cancel\")\r\n      .click(function(event) {\r\n        closePrintPreview();\r\n        return false;\r\n      });\r\n\r\n    result.click(function(event) {\r\n        if (event.target == this) {\r\n          closePrintPreview();\r\n        }\r\n      return true;\r\n    });\r\n\r\n    $(document).keyup(function(e) {\r\n      if (e.keyCode == 27) { // ESC\r\n        closePrintPreview();\r\n      }\r\n    });\r\n\r\n    // prevent background scrolling\r\n    result.scroll(function(event) {\r\n        return false;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function printPreviewElementStyle() {\r\n    var result = $(document.createElement('style'))\r\n      .attr(\"type\", \"text/css\")\r\n      .html(global.printPreviewCss);\r\n    return result;\r\n  }\r\n\r\n  // card layout: http://jsfiddle.net/chiuky/ykbLb2pw/76\r\n\r\n  function cardElement(issueKey) {\r\n    var result = $('<div/>').html(global.cardHtml).contents()\r\n      .attr(\"id\", issueKey)\r\n    return result;\r\n  }\r\n\r\n  function cardElementStyle() {\r\n    var result = $(document.createElement('style'))\r\n      .attr(\"type\", \"text/css\")\r\n      .html(global.cardCss);\r\n    return result;\r\n  }\r\n\r\n  //############################################################################################################################\r\n  // APP Specific Functions\r\n  //############################################################################################################################\r\n\r\n  function getIssueTrackers(){\r\n    var issueTrackers = []\r\n\r\n    var jiraFunctions = (function(module) {\r\n      module.name = \"JIRA\";\r\n\r\n      module.baseUrl = function() {\r\n        var jiraBaseUrl = window.location.origin;\r\n        try { jiraBaseUrl = $(\"input[title='baseURL']\").attr('value'); } catch(ex){}\r\n        return jiraBaseUrl\r\n      }\r\n\r\n      module.isEligible = function(){\r\n        return $(\"meta[name='application-name'][ content='JIRA']\").length > 0;\r\n      }\r\n\r\n      module.getSelectedIssueKeyList = function() {\r\n\r\n        //Issues\r\n        if (/.*\\/issues\\/.*/g.test(document.URL)) {\r\n\r\n          var issues =  $('.issue-list > li').map(function() {\r\n              return $(this).attr('data-key');\r\n          });\r\n\r\n          //backward compatibility\r\n          if (issues.empty()) {\r\n            issues =  $('tr[data-issuekey]').map(function() {\r\n              return $(this).attr('data-issuekey');\r\n            });\r\n          }\r\n\r\n          return issues;\r\n        }\r\n\r\n        //Browse\r\n        if (/.*\\/browse\\/.*/g.test(document.URL)) {\r\n          return [document.URL.match(/.*\\/browse\\/([^?]*).*/)[1]];\r\n        }\r\n\r\n        //Project\r\n        if (/.*\\/projects\\/.*/g.test(document.URL)) {\r\n          return [document.URL.match(/.*\\/projects\\/[^\\/]*\\/[^\\/]*\\/([^?]*).*/)[1]];\r\n        }\r\n\r\n        // RapidBoard\r\n        if (/.*\\/secure\\/RapidBoard.jspa.*/g.test(document.URL)) {\r\n          return $('div[data-issue-key].ghx-selected').map(function() {\r\n            return $(this).attr('data-issue-key');\r\n          });\r\n        }\r\n\r\n        return [];\r\n      };\r\n\r\n      module.getCardData = function(issueKey) {\r\n        var promises = [];\r\n        var issueData = {};\r\n\r\n        promises.push(module.getIssueData(issueKey).then(function(data) {\r\n          var promises = [];\r\n          issueData.key = data.key;\r\n          issueData.type = data.fields.issuetype.name.toLowerCase();\r\n          issueData.summary = data.fields.summary;\r\n          issueData.description = data.renderedFields.description;\r\n\r\n          if (data.fields.assignee) {\r\n            issueData.assignee = data.fields.assignee.displayName;\r\n            var avatarUrl = data.fields.assignee.avatarUrls['48x48'];\r\n            if (avatarUrl.indexOf(\"ownerId=\") >= 0) {\r\n              issueData.avatarUrl = avatarUrl;\r\n            }\r\n          }\r\n\r\n          if (data.fields.duedate) {\r\n            issueData.dueDate = formatDate(new Date(data.fields.duedate));\r\n          }\r\n\r\n          issueData.hasAttachment = data.fields.attachment.length > 0;\r\n          issueData.estimate = data.fields.storyPoints;\r\n\r\n          if (data.fields.parent) {\r\n            promises.push(module.getIssueData(data.fields.parent.key).then(function(data) {\r\n              issueData.superIssue = {};\r\n              issueData.superIssue.key = data.key;\r\n              issueData.superIssue.summary = data.fields.summary;\r\n            }));\r\n          } else if (data.fields.epicLink) {\r\n            promises.push(module.getIssueData(data.fields.epicLink).then(function(data) {\r\n              issueData.superIssue = {};\r\n              issueData.superIssue.key = data.key;\r\n              issueData.superIssue.summary = data.fields.epicName;\r\n            }));\r\n          }\r\n\r\n          issueData.url = module.baseUrl() + \"/browse/\" + issueData.key;\r\n\r\n          //LRS Specific field mapping\r\n          if (true) {\r\n            //Desired-Date\r\n            if (data.fields.desiredDate) {\r\n              issueData.dueDate = formatDate(new Date(data.fields.desiredDate));\r\n            }\r\n          }\r\n\r\n          return Promise.all(promises);\r\n        }));\r\n\r\n        return Promise.all(promises).then(function(results){return issueData;});\r\n      };\r\n\r\n      module.getIssueData = function(issueKey) {\r\n        //https://docs.atlassian.com/jira/REST/latest/\r\n        var url = module.baseUrl() + '/rest/api/2/issue/' + issueKey + '?expand=renderedFields,names';\r\n        console.log(\"IssueUrl: \" + url);\r\n        //console.log(\"Issue: \" + issueKey + \" Loading...\");\r\n        return httpGetJSON(url).then(function(responseData) {\r\n          //console.log(\"Issue: \" + issueKey + \" Loaded!\");\r\n          // add custom fields with field names\r\n          $.each(responseData.names, function(key, value) {\r\n            if (key.startsWith(\"customfield_\")) {\r\n              var fieldName = value.toCamelCase();\r\n              //console.log(\"add new field: \" + fieldName + \" with value from \" + key);\r\n              responseData.fields[fieldName] = responseData.fields[key];\r\n            }\r\n          });\r\n          return responseData;\r\n        });\r\n      };\r\n\r\n      return module;\r\n    }({}));\r\n    issueTrackers.push(jiraFunctions);\r\n\r\n    var youTrackFunctions = (function(module) {\r\n      module.name = \"YouTrack\";\r\n\r\n      module.isEligible = function(){\r\n        return /.*myjetbrains.com\\/youtrack\\/.*/g.test(document.URL) || /.*youtrack.jetbrains.com\\/.*/g.test(document.URL);\r\n      }\r\n\r\n      module.getSelectedIssueKeyList = function() {\r\n        //Detail View\r\n        if (/.*\\/issue\\/.*/g.test(document.URL)) {\r\n          return [document.URL.match(/.*\\/issue\\/([^?]*).*/)[1]];\r\n        }\r\n\r\n        // Agile Board\r\n        if (/.*\\/rest\\/agile.*/g.test(document.URL)) {\r\n          return $('div.sb-task-focused').map(function() {\r\n            return $(this).attr('id');\r\n          });\r\n        }\r\n\r\n        return [];\r\n      };\r\n\r\n      module.getCardData = function(issueKey) {\r\n        var promises = [];\r\n        var issueData = {};\r\n\r\n        promises.push(module.getIssueData(issueKey).then(function(data) {\r\n          issueData.key = data.id;\r\n          issueData.type = data.field.type[0];\r\n          issueData.summary = data.field.summary;\r\n          issueData.description = data.field.description;\r\n\r\n          if (data.field.assignee) {\r\n            issueData.assignee = data.field.assignee[0].fullName;\r\n          }\r\n\r\n          if (data.field.attachments) {\r\n            issueData.hasAttachment = data.field.attachments.length > 0;\r\n          }\r\n\r\n          issueData.url = window.location.origin + \"/youtrack/issue/\" + issueData.key;\r\n\r\n\r\n        }));\r\n\r\n        return Promise.all(promises).then(function(results){return issueData;});\r\n      };\r\n\r\n      module.getIssueData = function(issueKey) {\r\n        var url = '/youtrack/rest/issue/' + issueKey + '?';\r\n        console.log(\"IssueUrl: \" + url);\r\n        //console.log(\"Issue: \" + issueKey + \" Loading...\");\r\n        return httpGetJSON(url).then(function(responseData) {\r\n          //console.log(\"Issue: \" + issueKey + \" Loaded!\");\r\n          $.each(responseData.field, function(key, value) {\r\n            // add fields with field names\r\n            var fieldName = value.name.toCamelCase();\r\n            //console.log(\"add new field: \" + newFieldId + \" with value from \" + fieldName);\r\n            responseData.field[fieldName] = value.value;\r\n          });\r\n          return responseData;\r\n        });\r\n      };\r\n\r\n      return module;\r\n    }({}));\r\n    issueTrackers.push(youTrackFunctions);\r\n\r\n    var pivotalTrackerFunctions = (function(module) {\r\n      module.name = \"PivotalTracker\";\r\n\r\n      module.isEligible = function(){\r\n        return /.*pivotaltracker.com\\/.*/g.test(document.URL);\r\n      }\r\n\r\n      module.getSelectedIssueKeyList = function() {\r\n        //Single Story\r\n        if (/.*\\/stories\\/.*/g.test(document.URL)) {\r\n          return [document.URL.match(/.*\\/stories\\/([^?]*).*/)[1]];\r\n        }\r\n\r\n        // Project Board\r\n        if (/.*\\/projects\\/.*/g.test(document.URL)) {\r\n          return $('.story[data-id]:has(.selector.selected)').map(function() {\r\n            return $(this).attr('data-id');\r\n          });\r\n        }\r\n\r\n        // Workspace Board\r\n        if (/.*\\/workspaces\\/.*/g.test(document.URL)) {\r\n          return $('.story[data-id]:has(.selector.selected)').map(function() {\r\n            return $(this).attr('data-id');\r\n          });\r\n        }\r\n\r\n        return [];\r\n      };\r\n\r\n      module.getCardData = function(issueKey) {\r\n        var promises = [];\r\n        var issueData = {};\r\n\r\n        promises.push(module.getIssueData(issueKey).then(function(data) {\r\n          issueData.key = data.id;\r\n          issueData.type = data.kind.toLowerCase();\r\n          issueData.summary = data.name;\r\n          issueData.description = data.description;\r\n\r\n          if (data.owned_by && data.owned_by.length > 0) {\r\n            issueData.assignee = data.owner_ids[0].name;\r\n          }\r\n\r\n          if (data.deadline) {\r\n            issueData.dueDate = formatDate(new Date(data.deadline));\r\n          }\r\n\r\n          // TODO\r\n          issueData.hasAttachment = false;\r\n          issueData.estimate = data.estimate;\r\n\r\n          issueData.url = data.url;\r\n        }));\r\n\r\n        return Promise.all(promises).then(function(results){return issueData;});\r\n      };\r\n\r\n      module.getIssueData = function(issueKey) {\r\n        //http://www.pivotaltracker.com/help/api\r\n        var url = 'https://www.pivotaltracker.com/services/v5/stories/' + issueKey + \"?fields=name,kind,description,story_type,owned_by(name),comments(file_attachments(kind)),estimate,deadline\";\r\n        console.log(\"IssueUrl: \" + url);\r\n        //console.log(\"Issue: \" + issueKey + \" Loading...\");\r\n        return httpGetJSON(url);\r\n      };\r\n\r\n      return module;\r\n    }({}));\r\n    issueTrackers.push(pivotalTrackerFunctions);\r\n\r\n    var trelloFunctions = (function(module) {\r\n      module.name = \"trello\";\r\n\r\n      module.isEligible = function(){\r\n        return /.*trello.com\\/.*/g.test(document.URL);\r\n      }\r\n\r\n      module.getSelectedIssueKeyList = function() {\r\n        //Card View\r\n        if (/.*\\/c\\/.*/g.test(document.URL)) {\r\n          return [document.URL.match(/.*\\/c\\/([^/]*).*/)[1]];\r\n        }\r\n\r\n        return [];\r\n      };\r\n\r\n      module.getCardData = function(issueKey, callback) {\r\n        var promises = [];\r\n        var issueData = {};\r\n\r\n        promises.push(module.getIssueData(issueKey).then(function(data) {\r\n          issueData.key = data.idShort;\r\n\r\n          // TODO get type from label name\r\n          issueData.type = 'default';\r\n\r\n          issueData.summary = data.name;\r\n          issueData.description = data.desc;\r\n\r\n          if (data.members && data.members.length > 0) {\r\n            issueData.assignee = data.members[0].fullName;\r\n            issueData.avatarUrl = \"https://trello-avatars.s3.amazonaws.com/\" + data.members[0].avatarHash + \"/170.png\";\r\n          }\r\n\r\n          if (data.due) {\r\n            issueData.dueDate = formatDate(new Date(data.due));\r\n          }\r\n\r\n          issueData.hasAttachment = data.attachments > 0;\r\n          issueData.url = data.shortUrl;\r\n        }));\r\n\r\n        return Promise.all(promises).then(function(results){return issueData;});\r\n      };\r\n\r\n      module.getIssueData = function(issueKey) {\r\n        var url = \"/1/cards/\" + issueKey + \"?members=true\";\r\n        console.log(\"IssueUrl: \" + url);\r\n        //console.log(\"Issue: \" + issueKey + \" Loading...\");\r\n        return httpGetJSON(url);\r\n      };\r\n\r\n      return module;\r\n    }({}));\r\n    issueTrackers.push(trelloFunctions);\r\n\r\n    var mingleFunctions = (function(module) {\r\n      module.name = \"mingle\";\r\n\r\n      module.isEligible = function(){\r\n        return /.*mingle.thoughtworks.com\\/.*/g.test(document.URL);\r\n      }\r\n\r\n      module.getSelectedIssueKeyList = function() {\r\n        //Bord View - /projects/<project_name>/cards/grid\r\n        if (/.*\\/projects\\/[^/]*\\/cards\\/grid(\\?.*)?/g.test(document.URL)) {\r\n          var project = document.URL.match(/.*\\/projects\\/([^/]*).*/)[1];\r\n          var number = $(document).find('#card_show_lightbox_content > div > form[data-card-number]').attr('data-card-number');\r\n          return [project + \"-\" + number];\r\n        }\r\n\r\n        //Card View - /projects/<project_name>/cards/<card_number>\r\n        if (/.*\\/projects\\/[^/]*\\/cards\\/\\d+(\\?.*)?/g.test(document.URL)) {\r\n          var project = document.URL.match(/.*\\/projects\\/([^/]*).*/)[1];\r\n          var number = document.URL.match(/.*\\/projects\\/[^/]*\\/cards\\/(\\d+)(\\?.*)?/)[1];\r\n          return [project + \"-\" + number];\r\n        }\r\n\r\n        return [];\r\n      };\r\n\r\n      module.getCardData = function(issueKey, callback) {\r\n        var promises = [];\r\n        var issueData = {};\r\n\r\n        promises.push(module.getIssueData(issueKey).then(function(data) {\r\n          data = $(data.documentElement)\r\n\r\n          issueData.key = data.find('card > number')[0].textContent;\r\n          issueData.type = data.find('card > card_type > name')[0].textContent.toLowerCase();\r\n          issueData.summary = data.find('card > name')[0].textContent;\r\n          issueData.description = data.find('card > description')[0].innerHTML;  // TODO use data.find('card > rendered_description')[0].attr('url');\r\n\r\n          if(data.find('card > properties > property > name:contains(Owner) ~ value > name').length > 0){\r\n            issueData.assignee = data.find('card > properties > property > name:contains(Owner) ~ value > name')[0].textContent;\r\n            // TODOissueData.avatarUrl\r\n          }\r\n\r\n          // n/a issueData.dueDate = formatDate(new Date(dueDate));\r\n          // n/a issueData.hasAttachment = data.fields.attachment.length > 0;\r\n\r\n          if(data.find('card > properties > property > name:contains(Estimate) ~ value').length > 0){\r\n            issueData.estimate = data.find('card > properties > property > name:contains(Estimate) ~ value')[0].textContent;\r\n          }\r\n\r\n          // n/a issueData.superIssue\r\n\r\n          var projectIdentifier = data.find('card > project > identifier')[0].textContent;\r\n          var cardNumber = data.find('card > number')[0].textContent\r\n          issueData.url = \"https://\" + document.location.hostname + \"/projects/\" + projectIdentifier + \"/cards/\" + cardNumber;\r\n        }));\r\n\r\n        return Promise.all(promises).then(function(results){return issueData;});\r\n      };\r\n\r\n      module.getIssueData = function(issueKey) {\r\n        var issueKeySplit = issueKey.split('-');\r\n        var project = issueKeySplit[0];\r\n        var number = issueKeySplit[1];\r\n        var url = \"/api/v2/projects/\" + project + \"/cards/\" + number + \".xml\";\r\n        console.log(\"IssueUrl: \" + url);\r\n        //console.log(\"Issue: \" + issueKey + \" Loading...\");\r\n        return httpGet(url);\r\n      };\r\n\r\n      return module;\r\n    }({}));\r\n    issueTrackers.push(mingleFunctions);\r\n\r\n    return issueTrackers;\r\n  }\r\n\r\n  //############################################################################################################################\r\n  //############################################################################################################################\r\n  //############################################################################################################################\r\n\r\n  function initGoogleAnalytics() {\r\n    if (global.isDev) {\r\n      this.ga = function(){ console.log(\"GoogleAnalytics: \" + Object.keys(arguments).map(key => arguments[key]))}\r\n      return;\r\n    }\r\n    // <GoogleAnalytics>\r\n    (function(i, s, o, g, r, a, m) {\r\n      i['GoogleAnalyticsObject'] = r;\r\n      i[r] = i[r] || function() {\r\n        (i[r].q = i[r].q || []).push(arguments)\r\n      }, i[r].l = 1 * new Date();\r\n      a = s.createElement(o),\r\n        m = s.getElementsByTagName(o)[0];\r\n      a.async = 1;\r\n      a.src = g;\r\n      m.parentNode.insertBefore(a, m)\r\n    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\r\n\r\n    ga('create', 'UA-50840116-3', {\r\n      'alwaysSendReferrer': true\r\n    });\r\n    ga('set', 'page', '/cardprinter');\r\n  }\r\n\r\n  //############################################################################################################################\r\n  //############################################################################################################################\r\n  //############################################################################################################################\r\n\r\n  function parseBool(text, def){\r\n    if(text == 'true') return true;\r\n    else if ( text == 'false') return false;\r\n    else return def;\r\n  }\r\n\r\n  function appendScript(url, callback) {\r\n\r\n    var head = document.getElementsByTagName('head')[0];\r\n    var script = document.createElement('script');\r\n    script.src = url;\r\n\r\n    // Then bind the event to the callback function.\r\n    // There are several events for cross browser compatibility.\r\n    script.onreadystatechange = callback;\r\n    script.onload = callback;\r\n\r\n    head.appendChild(script);\r\n  }\r\n\r\n  function readCookie(name) {\r\n    var cookies = document.cookie.split('; ');\r\n\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].split('=');\r\n      if (cookie[0] == name) return cookie[1];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function writeCookie(name, value) {\r\n    var expireDate = new Date();  // current date & time\r\n    expireDate.setFullYear(expireDate.getFullYear() + 1) // one year\r\n    document.cookie = name + \"=\" + value + \"; path=/; expires=\" + expireDate.toGMTString();\r\n\r\n    // cleanup due to former path\r\n    document.cookie = name + \"=; expires=\" + new Date(0).toGMTString();\r\n  }\r\n\r\n  function httpGetCORS(){\r\n    //arguments[0] = 'https://jsonp.afeld.me/?url=' + arguments[0];\r\n    //arguments[0] = 'http://cors.io/?u=' + arguments[0];\r\n    arguments[0] = 'https://crossorigin.me/' + arguments[0];\r\n    return httpGet.apply(this, arguments);\r\n  }\r\n\r\n  function httpGet(){\r\n    return Promise.resolve($.get.apply(this, arguments));\r\n  }\r\n\r\n  function httpGetJSON(){\r\n    return Promise.resolve($.getJSON.apply(this, arguments));\r\n  }\r\n\r\n  function resizeIframe(iframe) {\r\n    iframe = $(iframe);\r\n    iframe.height(iframe[0].contentWindow.document.body.height);\r\n  }\r\n\r\n  function addStringFunctions() {\r\n\r\n    //trim string - remove leading and trailing whitespaces\r\n    if (!String.prototype.trim) {\r\n      String.prototype.trim = function() {\r\n        return this.replace(/^\\s+|\\s+$/g, '');\r\n      };\r\n    }\r\n\r\n    if (!String.prototype.startsWith) {\r\n      String.prototype.startsWith = function(str) {\r\n        return this.slice(0, str.length) == str;\r\n      };\r\n    }\r\n\r\n    if (!String.prototype.endsWith) {\r\n      String.prototype.endsWith = function(str) {\r\n        return this.slice(-str.length) == str;\r\n      };\r\n    }\r\n\r\n    if (!String.prototype.toCamelCase) {\r\n      String.prototype.toCamelCase = function() {\r\n        // remove all characters that should not be in a variable name\r\n        // as well underscores an numbers from the beginning of the string\r\n        var s = this.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\r\n        // uppercase letters preceeded by a hyphen or a space\r\n        s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function(a, b, c) {\r\n          return c.toUpperCase();\r\n        });\r\n        // uppercase letters following numbers\r\n        s = s.replace(/([0-9]+)([a-zA-Z])/g, function(a, b, c) {\r\n          return b + c.toUpperCase();\r\n        });\r\n        return s;\r\n      }\r\n    }\r\n  }\r\n\r\n  function formatDate(date) {\r\n    var shortMonths = {'Jan': 1, 'Feb':2, 'Mar':3, 'Apr':4, 'May':5, 'Jun':6, 'Jul':7, 'Aug':8, 'Sep':9, 'Oct':10, 'Nov':11, 'Dec':12 };\r\n    var dateSplit = date.toString().split(\" \");\r\n    // Mo 28.11.\r\n    return dateSplit[0] + \" \" + dateSplit[2] + \".\" + shortMonths[dateSplit[1]] + \".\";\r\n  }\r\n\r\n  function multilineString(commentFunction) {\r\n      return commentFunction.toString()\r\n          .replace(/^[^\\/]+\\/\\*!?/, '')\r\n          .replace(/\\*\\/[^\\/]+$/, '');\r\n  }\r\n\r\n  //############################################################################################################################\r\n  // Resources\r\n  //############################################################################################################################\r\n  function getResources(){\r\n   var resources = {};\r\n   resources.cardHtml = multilineString(function(){/*\r\n     <div class=\"card\">\r\n       <div class=\"card-content\">\r\n         <div class=\"card-body shadow\">\r\n           <div class=\"issue-summary\"></div>\r\n           <div class=\"issue-description\"></div>\r\n         </div>\r\n         <div class=\"card-header\">\r\n           <div class=\"author\">\r\n             <span>chiuky.com</span>\r\n             <br>\r\n             <span>©BengtBrodersen</span>\r\n           </div>\r\n           <div class=\"issue-id badge\"></div>\r\n           <div class=\"issue-id-fadeout\"></div>\r\n           <div class=\"issue-icon badge\" type=\"loading\"></div>\r\n           <div class=\"issue-estimate badge\"></div>\r\n           <div class=\"issue-due-box\">\r\n             <div class=\"issue-due-date badge\"></div>\r\n             <div class=\"issue-due-icon badge\"></div>\r\n           </div>\r\n         </div>\r\n         <div class=\"card-footer\">\r\n           <div class=\"issue-qr-code badge\"></div>\r\n           <div class=\"issue-attachment badge\"></div>\r\n           <div class=\"issue-assignee badge\"></div>\r\n           <div class=\"issue-epic-box badge\">\r\n             <span class=\"issue-epic-id\"></span><br>\r\n             <span class=\"issue-epic-name\"></span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     */});\r\n    resources.cardCss = multilineString(function(){/*\r\n     * {\r\n       box-sizing: border-box;\r\n       overflow: hidden;\r\n     }\r\n     html {\r\n       background-color: LIGHTGREY;\r\n       padding: 0rem;\r\n       margin: 1rem;\r\n       font-size: 1.0cm;\r\n       overflow-y: scroll;\r\n     }\r\n     body {\r\n       padding: 0rem;\r\n       margin: 0rem;\r\n       max-height: 100%;\r\n       max-width: 100%;\r\n       overflow: visible;\r\n     }\r\n     .badge, .shadow {\r\n       border-style: solid;\r\n       border-color: #454545;\r\n       border-top-width: 0.12rem;\r\n       border-left-width: 0.12rem;\r\n       border-bottom-width: 0.21rem;\r\n       border-right-width: 0.21rem;\r\n       border-radius: 0.25rem;\r\n     }\r\n     .badge {\r\n       background-color: WHITESMOKE;\r\n     }\r\n     .hidden {\r\n       display: none;\r\n     }\r\n     .zigzag {\r\n       border-bottom-width: 0rem;\r\n     }\r\n     .zigzag::after {\r\n         box-sizing: border-box;\r\n         position: absolute;\r\n         bottom: 0.00rem;\r\n         left: 0.0rem;\r\n         content: \"\";\r\n         width: 100%;\r\n         border-style: solid;\r\n         border-bottom-width: 0.5rem;\r\n         border-image: url(https://rawgit.com/chiuky/Jira-Issue-Card-Printer/develop/resources//Tearing.png);\r\n         border-image-width: 0 0 0.7rem 0;\r\n         border-image-slice: 56 0 56 1;\r\n         border-image-repeat: round round;\r\n     }\r\n     #preload {\r\n       position: fixed;\r\n       top: 0rem;\r\n       left: 100%;\r\n     }\r\n     .author {\r\n       color: DIMGREY;\r\n       position: relative;\r\n       top: 0.2rem;\r\n       left: calc(50% - 2rem);\r\n       font-size: 0.8rem;\r\n       overflow: visible;\r\n       line-height: 0.38rem;\r\n     }\r\n     .author > span:nth-of-type(2) {\r\n       position: relative;\r\n       top: 0.1rem;\r\n       left: 0.65rem;\r\n       font-size: 0.5em;\r\n     }\r\n     .card {\r\n       position: relative;\r\n       float: left;\r\n       height: 100%;\r\n       width: 100%;\r\n       padding: 0.5rem;\r\n       min-width: 14.5rem;\r\n       min-height: 8.65rem;\r\n       overflow: hidden;\r\n       background-color: WHITE;\r\n     }\r\n     .card::before {\r\n         box-sizing: border-box;\r\n         overflow: visible;\r\n         position: absolute;\r\n         top: 0.0rem;\r\n         left: 0.0rem;\r\n         content: \"\";\r\n         width: 100%;\r\n         height: 100%;\r\n         border-color: LightGray;\r\n         border-style: dashed;\r\n         border-width: 0.03cm;\r\n     }\r\n     .card-content {\r\n       position: relative;\r\n       height: 100%;\r\n       // find .card-header;\r\n       padding-top: 2rem;\r\n       // find .card-footer;\r\n       padding-bottom: 1.3rem;\r\n     }\r\n     .card-body {\r\n       position: relative;\r\n       height: 100%;\r\n       margin-left: 0.4rem;\r\n       margin-right: 0.4rem;\r\n       padding-top: 1.1rem;\r\n       padding-bottom: 1.1rem;\r\n       padding-left: 0.4rem;\r\n       padding-right: 0.4rem;\r\n       background: WHITE;\r\n     }\r\n     .card-header {\r\n       position: absolute;\r\n       top: 0rem;\r\n       height: 4.2rem;\r\n       width: 100%;\r\n     }\r\n     .card-footer {\r\n       position: absolute;\r\n       bottom: 0rem;\r\n       height: 2.2rem;\r\n       width: 100%;\r\n     }\r\n     .issue-summary {\r\n       font-weight: bold;\r\n       font-size: 0.9rem;\r\n     }\r\n     .issue-description {\r\n       margin-top: 0.1rem;\r\n       display: block;\r\n       font-size: 0.6rem;\r\n       line-height: 0.62rem;\r\n       overflow: hidden;\r\n     }\r\n     .issue-description p:first-of-type {\r\n       margin-top: 0rem;\r\n     }\r\n     .issue-description p:last-of-type {\r\n       margin-bottom: 0rem;\r\n     }\r\n     .issue-id {\r\n       position: absolute;\r\n       left: 1rem;\r\n       top: 1.2rem;\r\n       height: 1.5rem;\r\n       max-width: calc(100% - 7.5rem);\r\n       min-width: 6.0rem;\r\n       padding-left: 2.1rem;\r\n       padding-right: 0.4rem;\r\n       background-color: WHITESMOKE;\r\n       line-height: 1.3rem;\r\n       font-size: 0.8rem;\r\n       font-weight: bold;\r\n       text-align: center;\r\n       white-space: nowrap;\r\n       direction: rtl;\r\n     }\r\n     .issue-id-fadeout {\r\n       position: absolute;\r\n       left: 2.4rem;\r\n       top: 1.3rem;\r\n       width: 1.2rem;\r\n       height: 1.2rem;\r\n       z-index: 0;\r\n       background: linear-gradient(to left, rgba(224, 224, 224, 0) 0%, rgba(224, 224, 224, 1) 60%);\r\n     }\r\n     .issue-icon {\r\n       position: absolute;\r\n       left: 0rem;\r\n       top: 0rem;\r\n       height: 3.0rem;\r\n       width: 3.0rem;\r\n       border-radius: 50%;\r\n       background-color: LIGHTSEAGREEN;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/Objects.png);\r\n       background-repeat: no-repeat;\r\n       background-position: center;\r\n       background-size: 63%;\r\n     }\r\n     .issue-icon[type=\"loading\"]{\r\n       background-color: DEEPSKYBLUE;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/CloudLoading.png);\r\n     }\r\n     .issue-icon[type=\"story\"], .issue-icon[type=\"user story\"] {\r\n       background-color: GOLD;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/Bulb.png);\r\n     }\r\n     .issue-icon[type=\"bug\"], .issue-icon[type=\"problem\"], .issue-icon[type=\"correction\"]  {\r\n       background-color: CRIMSON;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/Bug.png);\r\n     }\r\n     .issue-icon[type=\"epic\"] {\r\n       background-color: ROYALBLUE;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/Flash.png);\r\n     }\r\n     .issue-icon[type=\"task\"], .issue-icon[type=\"sub-task\"], .issue-icon[type=\"technical task\"],\r\n     .issue-icon[type=\"aufgabe\"], .issue-icon[type=\"unteraufgabe\"], .issue-icon[type=\"technische aufgabe\"]  {\r\n       background-color: WHEAT;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/Task.png);\r\n     }\r\n     .issue-icon[type=\"new feature\"] {\r\n       background-color: LIMEGREEN;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/Plus.png);\r\n     }\r\n     .issue-icon[type=\"improvement\"],\r\n     .issue-icon[type=\"verbesserung\"] {\r\n       background-color: CORNFLOWERBLUE;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/Arrow.png);\r\n     }\r\n     .issue-icon[type=\"research\"] {\r\n       background-color: MEDIUMTURQUOISE;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/ErlenmeyerFlask.png);\r\n     }\r\n     .issue-icon[type=\"test\"] {\r\n       background-color: ORANGE;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/CrashDummy.png);\r\n     }\r\n     .issue-estimate {\r\n       position: absolute;\r\n       left: 2.5rem;\r\n       top: 0.0rem;\r\n       height: 1.6rem;\r\n       width: 1.6rem;\r\n       border-radius: 50%;\r\n       background-color: WHITESMOKE;\r\n       line-height: 1.4rem;\r\n       font-size: 0.9rem;\r\n       font-weight: bold;\r\n       text-align: center;\r\n     }\r\n     .issue-qr-code {\r\n       position: absolute;\r\n       left: 0rem;\r\n       top: 0rem;\r\n       width: 2.2rem;\r\n       height: 2.2rem;\r\n       background-image: url(https://chart.googleapis.com/chart?cht=qr&chs=256x256&chld=L|1&chl=blog.chiuky.com);\r\n       background-repeat: no-repeat;\r\n       background-size: cover;\r\n       background-position: center;\r\n     }\r\n     .issue-attachment {\r\n       position: absolute;\r\n       left: 2.5rem;\r\n       top: 0rem;\r\n       width: 2.0rem;\r\n       height: 2.0rem;\r\n       border-radius: 50%;\r\n       background-color: LIGHTSKYBLUE;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/Attachment.png);\r\n       background-repeat: no-repeat;\r\n       background-position: center;\r\n       background-size: 70%;\r\n     }\r\n     .issue-assignee {\r\n       position: absolute;\r\n       top: 0rem;\r\n       right: 0rem;\r\n       width: 2.2rem;\r\n       height: 2.2rem;\r\n       border-radius: 50%;\r\n       background-color: WHITESMOKE;\r\n       background-image: url(https://www.colourbox.com/preview/10714847-evil-christmas-elf.jpg);\r\n       background-repeat: no-repeat;\r\n       background-position: center;\r\n       background-size: cover;\r\n       //-webkit-filter: contrast(200%) grayscale(100%);\r\n       //filter: contrast(200%) grayscale(100%);\r\n       text-align: center;\r\n       font-weight: bold;\r\n       font-size: 1.4rem;\r\n       line-height: 1.9rem;\r\n     }\r\n     .issue-epic-box {\r\n       position: absolute;\r\n       right: 2.5rem;\r\n       top: 0rem;\r\n       width: auto;\r\n       min-width: 2rem;\r\n       width: auto;\r\n       max-width: calc(100% - 7.5rem);\r\n       height: auto;\r\n       max-height: 2.2rem;\r\n       padding-top: 0.1rem;\r\n       padding-bottom: 0.2rem;\r\n       padding-left: 0.3rem;\r\n       padding-right: 0.3rem;\r\n       text-align: left;\r\n       font-size: 0.5rem;\r\n       line-height: 0.55rem;\r\n     }\r\n     .issue-epic-id {\r\n       font-size: 0.6rem;\r\n       font-weight: bold;\r\n       max-width: 1rem;\r\n     }\r\n     .issue-epic-name {\r\n       font-size: 0.55rem;\r\n       font-weight: bold;\r\n     }\r\n     .issue-due-date-box {\r\n       position: absolute;\r\n       right: 0rem;\r\n       top: 0rem;\r\n       overflow: visible !important;\r\n     }\r\n     .issue-due-date {\r\n       position: absolute;\r\n       top: 1.3rem;\r\n       right: 1rem;\r\n       width: 5.3rem;\r\n       height: 1.3rem;\r\n       padding-left: 0.2rem;\r\n       padding-right: 1.4rem;\r\n       text-align: center;\r\n       font-weight: bold;\r\n       font-size: 0.7rem;\r\n       line-height: 1.0rem;\r\n     }\r\n     .issue-due-icon {\r\n       position: absolute;\r\n       top: 0.5rem;\r\n       right: 0rem;\r\n       width: 2.5rem;\r\n       height: 2.5rem;\r\n       border-radius: 50%;\r\n       background-color: ORCHID;\r\n       background-image: url(https://chiuky.github.io/Jira-Issue-Card-Printer/resources/icons/AlarmClock.png);\r\n       background-repeat: no-repeat;\r\n       background-position: center;\r\n       background-size: 65%;\r\n     }\r\n     @media print {\r\n       @page {\r\n         margin: 0.0mm;\r\n         padding: 0.0mm;\r\n       }\r\n       html {\r\n         margin: 0.0mm;\r\n         padding: 0.0mm;\r\n         background-color: WHITE !important;\r\n         -webkit-print-color-adjust: exact !important;\r\n         print-color-adjust: exact !important;\r\n       }\r\n       .card {\r\n         page-break-inside: avoid !important;\r\n         margin: 0.0mm !important;\r\n       }\r\n     }\r\n     */});\r\n    resources.printPreviewHtml = multilineString(function(){/*\r\n     <div id=\"card-print-overlay\">\r\n       <div id=\"card-print-dialog\">\r\n         <div id=\"card-print-dialog-header\">\r\n           <div id=\"card-print-dialog-title\">Card Printer</div>\r\n           <div id=\"info\">\r\n             <label id=\"info-line\"><b>Jira</b> - <b>Trello</b> - <b>YouTrack</b> - <b>PivotalTracker</b></label>\r\n             <div id=\"report-issue\" class=\"ui-element button\" >Report Issues</div>\r\n             <div id=\"about\" class=\"ui-element button\" >About</div>\r\n           </div>\r\n         </div>\r\n         <div id=\"card-print-dialog-content\">\r\n           <iframe id=\"card-print-dialog-content-iframe\"></iframe>\r\n         </div>\r\n         <div id=\"card-print-dialog-footer\">\r\n           <div class=\"buttons\">\r\n             <div class=\"ui-element\" style=\"float: left;\" >\r\n               <input id=\"columnCount\" type=\"number\" min=\"0\" max=\"9\" class=\"numberInput\" style=\"float: left; width: 18px; padding: 2px;\" value=\"1\"/>\r\n               <div style=\"float: left; margin-left: 5px; margin-right: 5px;\">x</div>\r\n               <input id=\"rowCount\" type=\"number\" min=\"0\" max=\"9\" class=\"numberInput\" style=\"float: left; width: 18px; padding: 2px;\" value=\"2\"/>\r\n               <label style=\"float: left; margin-left:5px;\">Page Grid</label>\r\n             </div>\r\n             <div class=\"ui-element\" style=\"float: left;\">\r\n               <form style=\"float: left;\" oninput=\"amount.value=parseFloat(scaleRange.value).toFixed(1)\">\r\n                 <input id=\"scaleRange\" type=\"range\" min=\"-1.0\" max=\"1.0\" step=\"0.1\" value=\"0.0\" style=\"float: left; width: 70px; position: relative;\r\n         top: -2px;\" />\r\n                 <label>Scale</label>\r\n                 <output style=\"float: left; width: 22px; margin-left:2px;\" name=\"amount\" for=\"scaleRange\"></output>\r\n               </form>\r\n\r\n             </div>\r\n             <div class=\"ui-element checkbox\" style=\"float: left;\">\r\n               <input id=\"single-card-page-checkbox\" type=\"checkbox\"/>\r\n               <label for=\"single-card-page-checkbox\"></label>\r\n               <label for=\"single-card-page-checkbox\">Single Card Per Page</label>\r\n             </div>\r\n             <div class=\"ui-element checkbox\" style=\"float: left;\">\r\n               <input id=\"description-checkbox\" type=\"checkbox\"/>\r\n               <label for=\"description-checkbox\"></label>\r\n               <label for=\"description-checkbo\">Description</label>\r\n             </div>\r\n             <div class=\"ui-element checkbox\" style=\"float: left;\">\r\n               <input id=\"assignee-checkbox\" type=\"checkbox\"/>\r\n               <label for=\"assignee-checkbox\"></label>\r\n               <label for=\"assignee-checkbox\">Assignee</label>\r\n             </div>\r\n             <div class=\"ui-element checkbox\" style=\"float: left;\">\r\n               <input id=\"due-date-checkbox\" type=\"checkbox\"/>\r\n               <label for=\"due-date-checkbox\"></label>\r\n               <label for=\"due-date-checkbox\">Due Date</label>\r\n             </div>\r\n             <div class=\"ui-element checkbox\" style=\"float: left;\">\r\n               <input id=\"estimate-checkbox\" type=\"checkbox\"/>\r\n               <label for=\"estimate-checkbox\"></label>\r\n               <label for=\"estimate-checkbox\">Estimate</label>\r\n             </div>\r\n             <div class=\"ui-element checkbox\" style=\"float: left;\">\r\n               <input id=\"qr-code-checkbox\" type=\"checkbox\"/>\r\n               <label for=\"qr-code-checkbox\"></label>\r\n               <label for=\"qr-code-checkbox\">QR Code</label>\r\n             </div>\r\n\r\n             <div id=\"card-print-dialog-print\" class=\"ui-element button button-primary\" >Print</div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     */});\r\n    resources.printPreviewCss = multilineString(function(){/*\r\n     * {\r\n       font-family: Arial, sans-serif;\r\n       color: #656565;\r\n     }\r\n     #card-print-overlay {\r\n       position: fixed;\r\n       height: 100%;\r\n       width: 100%;\r\n       top: 0;\r\n       left: 0;\r\n       background: rgba(0, 0, 0, 0.5);\r\n       box-sizing: border-box;\r\n       word-wrap: break-word;\r\n       z-index: 99999;\r\n     }\r\n     #card-print-dialog {\r\n       position: relative;\r\n       top: 60px;\r\n       right: 0px;\r\n       left: 0px;\r\n       height: calc(100% - 120px);\r\n       width: 1000px;\r\n       margin: auto;\r\n       border-style: solid;\r\n       border-color: #cccccc;\r\n       border-width: 1px;\r\n       -webkit-border-radius: 4px;\r\n       border-radius: 4px;\r\n       overflow: hidden;\r\n     }\r\n     #card-print-dialog-header {\r\n       position: relative;\r\n       background: #f0f0f0;\r\n       height: 25px;\r\n       border-bottom: 1px solid #cccccc;\r\n       padding: 10px 15px 15px 15px;\r\n     }\r\n     #card-print-dialog-content {\r\n       position: relative;\r\n       background: white;\r\n       height: calc(100% - 106px);\r\n       width: 100%;\r\n       overflow: hidden;\r\n     }\r\n     #card-print-dialog-content-iframe {\r\n       position: relative;\r\n       height: 100%;\r\n       width: 100%;\r\n       overflow: hidden;\r\n       border: none;\r\n     }\r\n     #card-print-dialog-footer {\r\n       position: relative;\r\n       background: #f0f0f0;\r\n       border-top: 1px solid #cccccc;\r\n       height: 30px;\r\n       padding: 15px 15px 10px 15px;\r\n       text-align: right;\r\n       font-size: 13px;\r\n     }\r\n     #buttons {\r\n       position: relative;\r\n       float: right;\r\n       display: inline-block;\r\n       height 30px;\r\n     }\r\n     #info {\r\n       position: relative;\r\n       float: right;\r\n       display: inline-block;\r\n       height: 30px;\r\n     }\r\n     #info-line {\r\n       font-size: 14px;\r\n       line-height: 29px;\r\n       margin-right: 8.4rem;\r\n     }\r\n     #card-print-dialog-title {\r\n       position: relative;\r\n       float: left;\r\n       color: rgb(51, 51, 51);\r\n       display: block;\r\n       font-size: 20px;\r\n       font-weight: normal;\r\n       height: 30px;\r\n       line-height: 30px;\r\n     }\r\n     .ui-element {\r\n       color: #656565;\r\n       font-size: 12px;\r\n       font-weight: 600;\r\n       display: inline-block;\r\n       margin: 5px 5px;\r\n       vertical-align: baseline;\r\n     }\r\n     .button {\r\n         cursor: pointer;\r\n         background-color: #DEDEDE;\r\n         border: 1px solid #D4D4D4;\r\n         border-radius: 3px;\r\n         display: inline-block;\r\n         font-size: 13px;\r\n         font-weight: 700;\r\n         padding: 5.8px 20px;\r\n         margin: 0px 2px;\r\n         text-decoration: none;\r\n         text-align: center;\r\n     }\r\n     .button-primary{\r\n         background-color: #5689db;\r\n         border: 1px solid #5689db;\r\n         color: #fff;\r\n     }\r\n     label {\r\n       display: block;\r\n       margin-left: 5px;\r\n       float:left;\r\n     }\r\n     label[for] {\r\n       cursor: pointer;\r\n     }\r\n     .checkbox {\r\n       position: relative;\r\n       width: auto;\r\n       height: auto;\r\n     }\r\n     .checkbox  input[type=checkbox]{\r\n       display: none;\r\n     }\r\n     .checkbox input[type=checkbox]  + label {\r\n       margin: 0px;\r\n       position: relative;\r\n       width: 15px;\r\n       height: 15px;\r\n       border-radius: 4px;\r\n       background-color: #DEDEDE;\r\n       border: 1px solid #D4D4D4;\r\n     }\r\n     .checkbox input[type=checkbox] + label::after {\r\n       opacity: 0;\r\n       content: '';\r\n       position: absolute;\r\n       width: 6px;\r\n       height: 3px;\r\n       background: transparent;\r\n       top: 4px;\r\n       left: 4px;\r\n       border: 2px solid #656565;\r\n       border-top: none;\r\n       border-right: none;\r\n       transform: rotate(-45deg);\r\n     }\r\n     .checkbox input[type=checkbox]:checked + label::after {\r\n       opacity: 1;\r\n     }\r\n     input[type=number].numberInput {\r\n         color: #656565;\r\n         position: relative;\r\n         top: -2;\r\n         font-size: 12px;\r\n         font-weight: 700;\r\n         width:1.5em;\r\n         padding:3px;\r\n         margin:0;\r\n         border:1px solid #ddd;\r\n         border-radius:5px;\r\n         text-align: center;\r\n         background-color: #DEDEDE;\r\n         border: 1px solid #D4D4D4;\r\n         width: 100px;\r\n     }\r\n     input[type=number].numberInput::-webkit-inner-spin-button,\r\n     input[type=number].numberInput ::-webkit-outer-spin-button {\r\n        -webkit-appearance: none;\r\n     }\r\n     input[type=number].numberInput:hover{\r\n         border:1px solid #ddd;\r\n         background-color: #f6f6f6;\r\n     }\r\n     input[type=number].numberInput:focus{\r\n         outline:none;\r\n         border:1px solid #ddd;\r\n         background-color: #f6f6f6;\r\n     }\r\n     */});\r\n\r\n     return resources;\r\n   }\r\n\r\n\r\n})();\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}